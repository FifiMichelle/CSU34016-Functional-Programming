THEORY Ex5Q3
IMPORT-THEORY Equality
IMPORT-THEORY Boolean
IMPORT-THEORY Arithmetic
IMPORT-THEORY List
IMPORT-HASKELL List
IMPORT-HASKELL Ex5

THEOREM ex5q3

   bonus xs == 6 + 13*(len xs) + sum xs

STRATEGY Induction xs :: List

    BASE []
        bonus [] == 6 + 13*(len []) + sum []
   
        STRATEGY ReduceBoth
            
            LHS
            bonus []
            = DEF bonus
            6
            
            RHS
            6 + 13 * (len []) + sum []
            = DEF len.1
            6 + (13 * 0) + sum ([])
            = DEF sum.1
            (6 + (13 * 0)) + 0
            = SIMP
            6
            
        END ReduceBoth

    END BASE
    
    STEP (x:xs)

        ASSUME
            bonus xs == 6 + 13 * len(xs) + sum(xs)

        SHOW
            bonus (x:xs) == 6 + 13 * len (x:xs) + sum (x:xs)
            
        STRATEGY ReduceBoth
            
              LHS

            bonus (x:xs)
            = DEF bonus.2
            (x + 13 + bonus (xs))
            = INDHYP l2r @ bonus
            (x + 13 + ((6 + (13 * len (xs))) + sum (xs)))
            = NORM +
            ((((6 + 13) + x) + sum (xs)) + (13 * len (xs)))

             RHS
             6 + 13 * len (x:xs) + sum (x:xs)
             = DEF len.2
             6 + 13 * (1 + len (xs)) + sum (x:xs)
             = DEF sum.2
             6 + 13 * (1 + len (xs)) + (x + sum (xs))
             = NORM *
             6 + 13 * (1 + len (xs)) + (x + sum (xs))
             = LAW mul_add_left_distr l2r @ * 1
             ((6 + ((13 * 1) + (13 * len (xs)))) + (x + sum (xs)))
             = SIMP
             ((6 + (13 + (13 * len (xs)))) + (x + sum (xs)))
             = NORM +
             ((((6 + 13) + x) + sum (xs)) + (13 * len (xs)))
            

        END ReduceBoth

    END STEP

END Induction
QED ex5q3

